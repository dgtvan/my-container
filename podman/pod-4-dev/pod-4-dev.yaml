# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.3.1
apiVersion: v1
kind: Pod
metadata:
  annotations:
  creationTimestamp: "2022-12-30T14:20:26Z"
  labels:
    app: pod-4-dev
  name: pod-4-dev
spec:
  automountServiceAccountToken: false
  containers:
  - args:
    - /opt/mssql/bin/sqlservr
    env:
    - name: MSSQL_SA_PASSWORD
      value: MyStrong(!)Password
    - name: ACCEPT_EULA
      value: "Y"
    image: mcr.microsoft.com/mssql/rhel/server:2022-latest
    name: sqlserver2022
    ports:
    - containerPort: 1433
      hostPort: 1433
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    tty: true
    volumeMounts:
    - mountPath: /var/opt/mssql/data
      name: mnt-d-PodVolume-sqlserver2022-data-host-0
  - args:
    - rabbitmq-server
    image: docker.io/library/rabbitmq:management
    name: rabbitmq-latest
    ports:
    - containerPort: 5672
      hostPort: 5672
    - containerPort: 15672
      hostPort: 15672
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    tty: true
    volumeMounts:
    - mountPath: /var/lib/rabbitmq/mnesia
      name: mnt-d-PodVolume-rabbitmq-host-0
  - image: docker.io/rnwood/smtp4dev:latest
    name: smtp4dev
    ports:
    - containerPort: 80
      hostPort: 3000
    - containerPort: 25
      hostPort: 2525
    resources: {}
    securityContext:
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
    tty: true
  enableServiceLinks: false
  hostname: pod-4-dev
  restartPolicy: Always
  volumes:
  - hostPath:
      path: /mnt/d/PodVolume/sqlserver2022/data
      type: Directory
    name: mnt-d-PodVolume-sqlserver2022-data-host-0
  - hostPath:
      path: /mnt/d/PodVolume/rabbitmq
      type: Directory
    name: mnt-d-PodVolume-rabbitmq-host-0
status: {}
